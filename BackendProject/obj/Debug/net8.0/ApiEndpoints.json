[
  {
    "ContainingType": "BackendProject.Controllers.ParkingAllocationsController",
    "Method": "GetAll",
    "RelativePath": "api/ParkingAllocations",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendProject.Controllers.ParkingAllocationsController",
    "Method": "Create",
    "RelativePath": "api/ParkingAllocations",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "BackendProject.DTO.ParkingAllocationCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendProject.Controllers.ParkingAllocationsController",
    "Method": "GetById",
    "RelativePath": "api/ParkingAllocations/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendProject.Controllers.ParkingAllocationsController",
    "Method": "Update",
    "RelativePath": "api/ParkingAllocations/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "BackendProject.DTO.ParkingAllocationUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendProject.Controllers.ParkingAllocationsController",
    "Method": "Delete",
    "RelativePath": "api/ParkingAllocations/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendProject.Controllers.ParkingAllocationsController",
    "Method": "GetByVehicleId",
    "RelativePath": "api/ParkingAllocations/by-vehicle/{vehicleId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "vehicleId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendProject.Controllers.ParkingLotsController",
    "Method": "GetAll",
    "RelativePath": "api/ParkingLots",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendProject.Controllers.ParkingLotsController",
    "Method": "Create",
    "RelativePath": "api/ParkingLots",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "BackendProject.DTO.ParkingLotCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendProject.Controllers.ParkingLotsController",
    "Method": "GetById",
    "RelativePath": "api/ParkingLots/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendProject.Controllers.ParkingLotsController",
    "Method": "Update",
    "RelativePath": "api/ParkingLots/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "BackendProject.DTO.ParkingLotUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendProject.Controllers.ParkingLotsController",
    "Method": "Delete",
    "RelativePath": "api/ParkingLots/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendProject.Controllers.ParkingLotsController",
    "Method": "Search",
    "RelativePath": "api/ParkingLots/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "from",
        "Type": "System.DateTime",
        "IsRequired": false
      },
      {
        "Name": "to",
        "Type": "System.DateTime",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendProject.Controllers.ParkingLotsController",
    "Method": "SeedLots",
    "RelativePath": "api/ParkingLots/seed",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendProject.Controllers.UsersController",
    "Method": "GetAll",
    "RelativePath": "api/Users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendProject.Controllers.UsersController",
    "Method": "Delete",
    "RelativePath": "api/Users/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendProject.Controllers.UsersController",
    "Method": "Update",
    "RelativePath": "api/Users/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "BackendProject.DTO.UserUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendProject.Controllers.UsersController",
    "Method": "Login",
    "RelativePath": "api/Users/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "BackendProject.DTO.LoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendProject.Controllers.UsersController",
    "Method": "Register",
    "RelativePath": "api/Users/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "BackendProject.DTO.RegisterDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendProject.Controllers.VehiclesController",
    "Method": "GetAll",
    "RelativePath": "api/Vehicles",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendProject.Controllers.VehiclesController",
    "Method": "Create",
    "RelativePath": "api/Vehicles",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "BackendProject.DTO.VehicleCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendProject.Controllers.VehiclesController",
    "Method": "GetById",
    "RelativePath": "api/Vehicles/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendProject.Controllers.VehiclesController",
    "Method": "Update",
    "RelativePath": "api/Vehicles/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "BackendProject.DTO.VehicleUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendProject.Controllers.VehiclesController",
    "Method": "Delete",
    "RelativePath": "api/Vehicles/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendProject.Controllers.VehiclesController",
    "Method": "GetByUserId",
    "RelativePath": "api/Vehicles/by-user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendProject.Controllers.VehiclesController",
    "Method": "Search",
    "RelativePath": "api/Vehicles/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendProject.Controllers.VehiclesController",
    "Method": "SearchByNumberPlate",
    "RelativePath": "api/Vehicles/search-by-plate",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "plate",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  }
]