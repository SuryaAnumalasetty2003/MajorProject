{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.14.0.0",
        "fileVersion": "4.14.0-3.25279.5 (995f12b6)",
        "semanticVersion": "4.14.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Email' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/LoginDto.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 23,
                  "endLine": 5,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/LoginDto.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 23,
                  "endLine": 5,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Password' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/LoginDto.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 23,
                  "endLine": 6,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/LoginDto.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 23,
                  "endLine": 6,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'LotNumber' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/ParkingLotCreateDto.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 23,
                  "endLine": 5,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/ParkingLotCreateDto.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 23,
                  "endLine": 5,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Location' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/ParkingLotCreateDto.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 23,
                  "endLine": 6,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/ParkingLotCreateDto.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 23,
                  "endLine": 6,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Users' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Data/AppDbContext.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 16,
                  "endLine": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Data/AppDbContext.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 28,
                  "endLine": 15,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Vehicles' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Data/AppDbContext.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 16,
                  "endLine": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Data/AppDbContext.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 31,
                  "endLine": 16,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'ParkingLots' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Data/AppDbContext.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 16,
                  "endLine": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Data/AppDbContext.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 34,
                  "endLine": 17,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'ParkingAllocations' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Data/AppDbContext.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 16,
                  "endLine": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Data/AppDbContext.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 41,
                  "endLine": 18,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Type' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/VehicleUpdateDto.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 23,
                  "endLine": 5,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/VehicleUpdateDto.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 23,
                  "endLine": 5,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'NumberPlate' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/VehicleUpdateDto.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 23,
                  "endLine": 6,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/VehicleUpdateDto.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 23,
                  "endLine": 6,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Make' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/VehicleUpdateDto.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 23,
                  "endLine": 7,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/VehicleUpdateDto.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 23,
                  "endLine": 7,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Color' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/VehicleUpdateDto.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 23,
                  "endLine": 8,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/VehicleUpdateDto.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 23,
                  "endLine": 8,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'SecretKey' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Settings/JwtSettings.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 23,
                  "endLine": 5,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Settings/JwtSettings.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 23,
                  "endLine": 5,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Issuer' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Settings/JwtSettings.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 23,
                  "endLine": 6,
                  "endColumn": 29
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Settings/JwtSettings.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 23,
                  "endLine": 6,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Audience' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Settings/JwtSettings.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 23,
                  "endLine": 7,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Settings/JwtSettings.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 23,
                  "endLine": 7,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'NumberPlate' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/ParkingAllocationReadDto.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 23,
                  "endLine": 9,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/ParkingAllocationReadDto.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 23,
                  "endLine": 9,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'LotNumber' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/ParkingAllocationReadDto.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 23,
                  "endLine": 11,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/ParkingAllocationReadDto.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 23,
                  "endLine": 11,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'LotLocation' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/ParkingAllocationReadDto.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 23,
                  "endLine": 12,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/ParkingAllocationReadDto.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 23,
                  "endLine": 12,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'LotNumber' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/ParkingLot.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 23,
                  "endLine": 11,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/ParkingLot.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 23,
                  "endLine": 11,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Location' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/ParkingLot.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 23,
                  "endLine": 13,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/ParkingLot.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 23,
                  "endLine": 13,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Allocations' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/ParkingLot.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 47,
                  "endLine": 17,
                  "endColumn": 58
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/ParkingLot.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 47,
                  "endLine": 17,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'LotNumber' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/ParkingLotUpdateDto.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 19,
                  "endLine": 6,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/ParkingLotUpdateDto.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 19,
                  "endLine": 6,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Location' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/ParkingLotUpdateDto.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 19,
                  "endLine": 7,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/ParkingLotUpdateDto.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 19,
                  "endLine": 7,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Type' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/VehicleReadDto.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 23,
                  "endLine": 6,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/VehicleReadDto.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 23,
                  "endLine": 6,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'NumberPlate' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/VehicleReadDto.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 23,
                  "endLine": 7,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/VehicleReadDto.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 23,
                  "endLine": 7,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Make' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/VehicleReadDto.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 23,
                  "endLine": 8,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/VehicleReadDto.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 23,
                  "endLine": 8,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Color' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/VehicleReadDto.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 23,
                  "endLine": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/VehicleReadDto.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 23,
                  "endLine": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'UserName' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/VehicleReadDto.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 23,
                  "endLine": 11,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/VehicleReadDto.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 23,
                  "endLine": 11,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'LotNumber' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/ParkingLotReadDto.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 23,
                  "endLine": 6,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/ParkingLotReadDto.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 23,
                  "endLine": 6,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Location' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/ParkingLotReadDto.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 23,
                  "endLine": 7,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/ParkingLotReadDto.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 23,
                  "endLine": 7,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'FullName' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/RegisterDto.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 23,
                  "endLine": 6,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/RegisterDto.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 23,
                  "endLine": 6,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'MobileNumber' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/RegisterDto.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 23,
                  "endLine": 7,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/RegisterDto.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 23,
                  "endLine": 7,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Email' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/RegisterDto.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 23,
                  "endLine": 8,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/RegisterDto.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 23,
                  "endLine": 8,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Password' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/RegisterDto.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 23,
                  "endLine": 9,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/RegisterDto.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 23,
                  "endLine": 9,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'FullName' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/UserUpdateDto.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 23,
                  "endLine": 5,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/UserUpdateDto.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 23,
                  "endLine": 5,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'MobileNumber' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/UserUpdateDto.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 23,
                  "endLine": 6,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/UserUpdateDto.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 23,
                  "endLine": 6,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Email' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/UserUpdateDto.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 23,
                  "endLine": 7,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/UserUpdateDto.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 23,
                  "endLine": 7,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'FullName' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/UserReadDto.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 23,
                  "endLine": 6,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/UserReadDto.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 23,
                  "endLine": 6,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Email' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/UserReadDto.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 23,
                  "endLine": 7,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/UserReadDto.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 23,
                  "endLine": 7,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'MobileNumber' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/UserReadDto.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 23,
                  "endLine": 8,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/UserReadDto.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 23,
                  "endLine": 8,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Role' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/UserReadDto.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 23,
                  "endLine": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/UserReadDto.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 23,
                  "endLine": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Type' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/VehicleCreateDto.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 23,
                  "endLine": 5,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/VehicleCreateDto.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 23,
                  "endLine": 5,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'NumberPlate' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/VehicleCreateDto.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 23,
                  "endLine": 6,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/VehicleCreateDto.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 23,
                  "endLine": 6,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Make' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/VehicleCreateDto.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 23,
                  "endLine": 7,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/VehicleCreateDto.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 23,
                  "endLine": 7,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Color' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/VehicleCreateDto.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 23,
                  "endLine": 8,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/VehicleCreateDto.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 23,
                  "endLine": 8,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'FullName' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/User.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 23,
                  "endLine": 11,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/User.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 23,
                  "endLine": 11,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Email' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/User.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 23,
                  "endLine": 15,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/User.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 23,
                  "endLine": 15,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'PasswordHash' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/User.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 23,
                  "endLine": 18,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/User.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 23,
                  "endLine": 18,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Vehicle' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/User.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 24,
                  "endLine": 25,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/User.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 24,
                  "endLine": 25,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Vehicle' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/ParkingAllocation.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/ParkingAllocation.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'ParkingLot' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/ParkingAllocation.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 27,
                  "endLine": 27,
                  "endColumn": 37
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/ParkingAllocation.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 27,
                  "endLine": 27,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Type' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/Vehicle.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 23,
                  "endLine": 12,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/Vehicle.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 23,
                  "endLine": 12,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'NumberPlate' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/Vehicle.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 23,
                  "endLine": 15,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/Vehicle.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 23,
                  "endLine": 15,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Make' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/Vehicle.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 23,
                  "endLine": 18,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/Vehicle.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 23,
                  "endLine": 18,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Color' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/Vehicle.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 23,
                  "endLine": 20,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/Vehicle.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 23,
                  "endLine": 20,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'User' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/Vehicle.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 21,
                  "endLine": 26,
                  "endColumn": 25
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/Vehicle.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 21,
                  "endLine": 26,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Allocations' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/Vehicle.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 47,
                  "endLine": 29,
                  "endColumn": 58
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Model/Vehicle.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 47,
                  "endLine": 29,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Repository/VehicleRepository.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 20,
                  "endLine": 18,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/VehicleService.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 28,
                  "endLine": 37,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/VehicleService.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 24,
                  "endLine": 46,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Repository/GenericRepository.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 54,
                  "endLine": 20,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/UserService.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 28,
                  "endLine": 46,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/UserService.cs",
                "region": {
                  "startLine": 55,
                  "startColumn": 24,
                  "endLine": 55,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingLotService.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 28,
                  "endLine": 68,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 28,
                  "endLine": 41,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/UserService.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 24,
                  "endLine": 89,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/UserService.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 24,
                  "endLine": 94,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingLotService.cs",
                "region": {
                  "startLine": 104,
                  "startColumn": 28,
                  "endLine": 104,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/UserService.cs",
                "region": {
                  "startLine": 109,
                  "startColumn": 28,
                  "endLine": 109,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/UserService.cs",
                "region": {
                  "startLine": 118,
                  "startColumn": 24,
                  "endLine": 118,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Repository/GenericRepository.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 20,
                  "endLine": 66,
                  "endColumn": 99
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/UserService.cs",
                "region": {
                  "startLine": 152,
                  "startColumn": 28,
                  "endLine": 152,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/UserService.cs",
                "region": {
                  "startLine": 166,
                  "startColumn": 24,
                  "endLine": 166,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/VehicleService.cs",
                "region": {
                  "startLine": 131,
                  "startColumn": 24,
                  "endLine": 131,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/VehicleService.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 28,
                  "endLine": 143,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/VehicleService.cs",
                "region": {
                  "startLine": 154,
                  "startColumn": 24,
                  "endLine": 154,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 153,
                  "startColumn": 46,
                  "endLine": 153,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Program.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 27,
                  "endLine": 74,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/RegisterDto.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 9,
                  "endLine": 5,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Program.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 1,
                  "endLine": 33,
                  "endColumn": 93
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/UserService.cs",
                "region": {
                  "startLine": 171,
                  "startColumn": 9,
                  "endLine": 171,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Interface/IUserService.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 9,
                  "endLine": 14,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1192",
          "level": "warning",
          "message": "Define a constant instead of using this literal 'IsDeleted' 8 times.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Migrations/20250801071155_Added.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 23,
                  "endLine": 14,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Migrations/20250801071155_Added.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 23,
                  "endLine": 18,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Migrations/20250801071155_Added.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 23,
                  "endLine": 22,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Migrations/20250801071155_Added.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 23,
                  "endLine": 26,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Migrations/20250801071155_Added.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 23,
                  "endLine": 44,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Migrations/20250801071155_Added.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 23,
                  "endLine": 51,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Migrations/20250801071155_Added.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 23,
                  "endLine": 58,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Migrations/20250801071155_Added.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 23,
                  "endLine": 65,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": null,
              "1": null,
              "2": null,
              "3": null,
              "4": null,
              "5": null,
              "6": null
            }
          }
        },
        {
          "ruleId": "S1192",
          "level": "warning",
          "message": "Define a constant instead of using this literal 'Users' 4 times.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Migrations/20250801071155_Added.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 24,
                  "endLine": 19,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Migrations/20250801071155_Added.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 24,
                  "endLine": 31,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Migrations/20250801071155_Added.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 24,
                  "endLine": 40,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Migrations/20250801071155_Added.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 24,
                  "endLine": 52,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": null,
              "1": null,
              "2": null
            }
          }
        },
        {
          "ruleId": "S1192",
          "level": "warning",
          "message": "Define a constant instead of using this literal 'Internal server error' 6 times.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Controllers/ParkingAllocationsController.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 40,
                  "endLine": 32,
                  "endColumn": 63
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Controllers/ParkingAllocationsController.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 40,
                  "endLine": 48,
                  "endColumn": 63
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Controllers/ParkingAllocationsController.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 40,
                  "endLine": 63,
                  "endColumn": 63
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Controllers/ParkingAllocationsController.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 40,
                  "endLine": 80,
                  "endColumn": 63
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Controllers/ParkingAllocationsController.cs",
                "region": {
                  "startLine": 98,
                  "startColumn": 40,
                  "endLine": 98,
                  "endColumn": 63
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Controllers/ParkingAllocationsController.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 40,
                  "endLine": 114,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": null,
              "1": null,
              "2": null,
              "3": null,
              "4": null
            }
          }
        },
        {
          "ruleId": "S1192",
          "level": "warning",
          "message": "Define a constant instead of using this literal 'Internal server error' 6 times.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Controllers/UsersController.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 40,
                  "endLine": 42,
                  "endColumn": 63
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Controllers/UsersController.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 44,
                  "endLine": 54,
                  "endColumn": 67
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Controllers/UsersController.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 40,
                  "endLine": 67,
                  "endColumn": 63
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Controllers/UsersController.cs",
                "region": {
                  "startLine": 93,
                  "startColumn": 40,
                  "endLine": 93,
                  "endColumn": 63
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Controllers/UsersController.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 40,
                  "endLine": 116,
                  "endColumn": 63
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Controllers/UsersController.cs",
                "region": {
                  "startLine": 139,
                  "startColumn": 40,
                  "endLine": 139,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": null,
              "1": null,
              "2": null,
              "3": null,
              "4": null
            }
          }
        },
        {
          "ruleId": "S1192",
          "level": "warning",
          "message": "Define a constant instead of using this literal 'Internal server error.' 7 times.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Controllers/ParkingLotsController.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 40,
                  "endLine": 33,
                  "endColumn": 64
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Controllers/ParkingLotsController.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 40,
                  "endLine": 49,
                  "endColumn": 64
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Controllers/ParkingLotsController.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 40,
                  "endLine": 65,
                  "endColumn": 64
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Controllers/ParkingLotsController.cs",
                "region": {
                  "startLine": 81,
                  "startColumn": 40,
                  "endLine": 81,
                  "endColumn": 64
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Controllers/ParkingLotsController.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 40,
                  "endLine": 97,
                  "endColumn": 64
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Controllers/ParkingLotsController.cs",
                "region": {
                  "startLine": 113,
                  "startColumn": 40,
                  "endLine": 113,
                  "endColumn": 64
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Controllers/ParkingLotsController.cs",
                "region": {
                  "startLine": 132,
                  "startColumn": 40,
                  "endLine": 132,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": null,
              "1": null,
              "2": null,
              "3": null,
              "4": null,
              "5": null
            }
          }
        },
        {
          "ruleId": "S2139",
          "level": "warning",
          "message": "Either log this exception and handle it, or rethrow it with some contextual information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 30,
                  "endLine": 28,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 17,
                  "endLine": 30,
                  "endColumn": 63
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 17,
                  "endLine": 31,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Logging statement.",
              "1": "Thrown exception."
            }
          }
        },
        {
          "ruleId": "S2139",
          "level": "warning",
          "message": "Either log this exception and handle it, or rethrow it with some contextual information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingLotService.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 30,
                  "endLine": 53,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingLotService.cs",
                "region": {
                  "startLine": 55,
                  "startColumn": 17,
                  "endLine": 55,
                  "endColumn": 61
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingLotService.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 17,
                  "endLine": 56,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Logging statement.",
              "1": "Thrown exception."
            }
          }
        },
        {
          "ruleId": "S2139",
          "level": "warning",
          "message": "Either log this exception and handle it, or rethrow it with some contextual information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingLotService.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 30,
                  "endLine": 73,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingLotService.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 17,
                  "endLine": 75,
                  "endColumn": 79
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingLotService.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 17,
                  "endLine": 76,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Logging statement.",
              "1": "Thrown exception."
            }
          }
        },
        {
          "ruleId": "S2139",
          "level": "warning",
          "message": "Either log this exception and handle it, or rethrow it with some contextual information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 30,
                  "endLine": 45,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 17,
                  "endLine": 47,
                  "endColumn": 82
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 17,
                  "endLine": 48,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Logging statement.",
              "1": "Thrown exception."
            }
          }
        },
        {
          "ruleId": "S2139",
          "level": "warning",
          "message": "Either log this exception and handle it, or rethrow it with some contextual information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingLotService.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 30,
                  "endLine": 89,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingLotService.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 17,
                  "endLine": 91,
                  "endColumn": 61
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingLotService.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 17,
                  "endLine": 92,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Logging statement.",
              "1": "Thrown exception."
            }
          }
        },
        {
          "ruleId": "S2139",
          "level": "warning",
          "message": "Either log this exception and handle it, or rethrow it with some contextual information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 30,
                  "endLine": 60,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 17,
                  "endLine": 62,
                  "endColumn": 110
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 17,
                  "endLine": 63,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Logging statement.",
              "1": "Thrown exception."
            }
          }
        },
        {
          "ruleId": "S2139",
          "level": "warning",
          "message": "Either log this exception and handle it, or rethrow it with some contextual information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingLotService.cs",
                "region": {
                  "startLine": 113,
                  "startColumn": 30,
                  "endLine": 113,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingLotService.cs",
                "region": {
                  "startLine": 115,
                  "startColumn": 17,
                  "endLine": 115,
                  "endColumn": 77
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingLotService.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 17,
                  "endLine": 116,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Logging statement.",
              "1": "Thrown exception."
            }
          }
        },
        {
          "ruleId": "S2139",
          "level": "warning",
          "message": "Either log this exception and handle it, or rethrow it with some contextual information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingLotService.cs",
                "region": {
                  "startLine": 135,
                  "startColumn": 30,
                  "endLine": 135,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingLotService.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 17,
                  "endLine": 137,
                  "endColumn": 77
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingLotService.cs",
                "region": {
                  "startLine": 138,
                  "startColumn": 17,
                  "endLine": 138,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Logging statement.",
              "1": "Thrown exception."
            }
          }
        },
        {
          "ruleId": "S2139",
          "level": "warning",
          "message": "Either log this exception and handle it, or rethrow it with some contextual information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 30,
                  "endLine": 74,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 17,
                  "endLine": 76,
                  "endColumn": 94
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 17,
                  "endLine": 77,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Logging statement.",
              "1": "Thrown exception."
            }
          }
        },
        {
          "ruleId": "S6964",
          "level": "warning",
          "message": "Value type property used as input in a controller action should be nullable, required or annotated with the JsonRequiredAttribute to avoid under-posting.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/ParkingAllocationCreateDto.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 20,
                  "endLine": 7,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6964",
          "level": "warning",
          "message": "Value type property used as input in a controller action should be nullable, required or annotated with the JsonRequiredAttribute to avoid under-posting.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/ParkingAllocationCreateDto.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 20,
                  "endLine": 8,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6964",
          "level": "warning",
          "message": "Value type property used as input in a controller action should be nullable, required or annotated with the JsonRequiredAttribute to avoid under-posting.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/ParkingAllocationCreateDto.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6964",
          "level": "warning",
          "message": "Value type property used as input in a controller action should be nullable, required or annotated with the JsonRequiredAttribute to avoid under-posting.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/ParkingAllocationCreateDto.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 25,
                  "endLine": 12,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6964",
          "level": "warning",
          "message": "Value type property used as input in a controller action should be nullable, required or annotated with the JsonRequiredAttribute to avoid under-posting.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/VehicleCreateDto.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 20,
                  "endLine": 9,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2139",
          "level": "warning",
          "message": "Either log this exception and handle it, or rethrow it with some contextual information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 30,
                  "endLine": 89,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 17,
                  "endLine": 91,
                  "endColumn": 95
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 17,
                  "endLine": 92,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Logging statement.",
              "1": "Thrown exception."
            }
          }
        },
        {
          "ruleId": "S6964",
          "level": "warning",
          "message": "Value type property used as input in a controller action should be nullable, required or annotated with the JsonRequiredAttribute to avoid under-posting.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/ParkingAllocationUpdateDto.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 20,
                  "endLine": 7,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6964",
          "level": "warning",
          "message": "Value type property used as input in a controller action should be nullable, required or annotated with the JsonRequiredAttribute to avoid under-posting.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/ParkingAllocationUpdateDto.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 25,
                  "endLine": 9,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6964",
          "level": "warning",
          "message": "Value type property used as input in a controller action should be nullable, required or annotated with the JsonRequiredAttribute to avoid under-posting.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/ParkingAllocationUpdateDto.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 25,
                  "endLine": 11,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6964",
          "level": "warning",
          "message": "Value type property used as input in a controller action should be nullable, required or annotated with the JsonRequiredAttribute to avoid under-posting.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/DTO/VehicleUpdateDto.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 20,
                  "endLine": 9,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2139",
          "level": "warning",
          "message": "Either log this exception and handle it, or rethrow it with some contextual information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/VehicleService.cs",
                "region": {
                  "startLine": 123,
                  "startColumn": 46,
                  "endLine": 123,
                  "endColumn": 48
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/VehicleService.cs",
                "region": {
                  "startLine": 125,
                  "startColumn": 17,
                  "endLine": 125,
                  "endColumn": 121
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/VehicleService.cs",
                "region": {
                  "startLine": 126,
                  "startColumn": 17,
                  "endLine": 126,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Logging statement.",
              "1": "Thrown exception."
            }
          }
        },
        {
          "ruleId": "S2139",
          "level": "warning",
          "message": "Either log this exception and handle it, or rethrow it with some contextual information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingLotService.cs",
                "region": {
                  "startLine": 202,
                  "startColumn": 30,
                  "endLine": 202,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingLotService.cs",
                "region": {
                  "startLine": 204,
                  "startColumn": 17,
                  "endLine": 204,
                  "endColumn": 63
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingLotService.cs",
                "region": {
                  "startLine": 205,
                  "startColumn": 17,
                  "endLine": 205,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Logging statement.",
              "1": "Thrown exception."
            }
          }
        },
        {
          "ruleId": "S2139",
          "level": "warning",
          "message": "Either log this exception and handle it, or rethrow it with some contextual information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 191,
                  "startColumn": 30,
                  "endLine": 191,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 193,
                  "startColumn": 17,
                  "endLine": 193,
                  "endColumn": 71
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 194,
                  "startColumn": 17,
                  "endLine": 194,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Logging statement.",
              "1": "Thrown exception."
            }
          }
        },
        {
          "ruleId": "S2139",
          "level": "warning",
          "message": "Either log this exception and handle it, or rethrow it with some contextual information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingLotService.cs",
                "region": {
                  "startLine": 163,
                  "startColumn": 30,
                  "endLine": 163,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingLotService.cs",
                "region": {
                  "startLine": 165,
                  "startColumn": 17,
                  "endLine": 165,
                  "endColumn": 72
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingLotService.cs",
                "region": {
                  "startLine": 166,
                  "startColumn": 17,
                  "endLine": 166,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Logging statement.",
              "1": "Thrown exception."
            }
          }
        },
        {
          "ruleId": "S2139",
          "level": "warning",
          "message": "Either log this exception and handle it, or rethrow it with some contextual information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 135,
                  "startColumn": 30,
                  "endLine": 135,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 17,
                  "endLine": 137,
                  "endColumn": 144
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 138,
                  "startColumn": 17,
                  "endLine": 138,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Logging statement.",
              "1": "Thrown exception."
            }
          }
        },
        {
          "ruleId": "S2139",
          "level": "warning",
          "message": "Either log this exception and handle it, or rethrow it with some contextual information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 174,
                  "startColumn": 30,
                  "endLine": 174,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 17,
                  "endLine": 176,
                  "endColumn": 71
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 177,
                  "startColumn": 17,
                  "endLine": 177,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Logging statement.",
              "1": "Thrown exception."
            }
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer the string comparison method overload of 'string.Contains(string)' that takes a 'StringComparison' enum value to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/VehicleService.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 25,
                  "endLine": 90,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": "ToLower",
              "RightOffendingMethod": null
            }
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer the string comparison method overload of 'string.Contains(string)' that takes a 'StringComparison' enum value to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/VehicleService.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 25,
                  "endLine": 91,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": "ToLower",
              "RightOffendingMethod": null
            }
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer the string comparison method overload of 'string.Contains(string)' that takes a 'StringComparison' enum value to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/VehicleService.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 43,
                  "endLine": 92,
                  "endColumn": 83
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": "ToLower",
              "RightOffendingMethod": null
            }
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer the string comparison method overload of 'string.Contains(string)' that takes a 'StringComparison' enum value to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/VehicleService.cs",
                "region": {
                  "startLine": 166,
                  "startColumn": 21,
                  "endLine": 166,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": "ToLower",
              "RightOffendingMethod": null
            }
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 150,
                  "startColumn": 27,
                  "endLine": 150,
                  "endColumn": 97
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 163,
                  "startColumn": 27,
                  "endLine": 163,
                  "endColumn": 124
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 104,
                  "startColumn": 27,
                  "endLine": 104,
                  "endColumn": 97
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 27,
                  "endLine": 114,
                  "endColumn": 101
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Service/Implementation/ParkingAllocationService.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 27,
                  "endLine": 122,
                  "endColumn": 128
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6966",
          "level": "warning",
          "message": "Await RunAsync instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/ParkingLotAllocationSystem/BackendProject/Program.cs",
                "region": {
                  "startLine": 108,
                  "startColumn": 1,
                  "endLine": 108,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1862": {
          "id": "CA1862",
          "shortDescription": "Use the 'StringComparison' method overloads to perform case-insensitive string comparisons",
          "fullDescription": "Avoid calling 'ToLower', 'ToUpper', 'ToLowerInvariant' and 'ToUpperInvariant' to perform case-insensitive string comparisons because they lead to an allocation. Instead, prefer calling the method overloads of 'Contains', 'IndexOf' and 'StartsWith' that take a 'StringComparison' enum value to perform case-insensitive comparisons. Switching to using an overload that takes a 'StringComparison' might cause subtle changes in behavior, so it's important to conduct thorough testing after applying the suggestion. Additionally, if a culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1862",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS8602": {
          "id": "CS8602",
          "shortDescription": "Dereference of a possibly null reference.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8602)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8603": {
          "id": "CS8603",
          "shortDescription": "Possible null reference return.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8603)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8618": {
          "id": "CS8618",
          "shortDescription": "Non-nullable field must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring as nullable.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8618)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S112": {
          "id": "S112",
          "shortDescription": "General or reserved exceptions should never be thrown",
          "fullDescription": "This rule raises an issue when a general or reserved exception is thrown.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-112",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1192": {
          "id": "S1192",
          "shortDescription": "String literals should not be duplicated",
          "fullDescription": "Duplicated string literals make the process of refactoring complex and error-prone, as any change would need to be propagated on all occurrences.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1192",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S125": {
          "id": "S125",
          "shortDescription": "Sections of code should not be commented out",
          "fullDescription": "Commented-out code distracts the focus from the actual executed code. It creates a noise that increases maintenance code. And because it is never executed, it quickly becomes out of date and invalid.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-125",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2139": {
          "id": "S2139",
          "shortDescription": "Exceptions should be either logged or rethrown but not both",
          "fullDescription": "When an exception is logged and rethrown, the upstream code may not be aware that the exception has already been logged. As a result, the same exception gets logged multiple times, making it difficult to identify the root cause of the issue. This can be particularly problematic in multi-threaded applications where messages from other threads can be interwoven with the repeated log entries.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2139",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6964": {
          "id": "S6964",
          "shortDescription": "Value type property used as input in a controller action should be nullable, required or annotated with the JsonRequiredAttribute to avoid under-posting.",
          "fullDescription": "\"Under-posting\" refers to a situation where a client sends less data than expected to the server during an HTTP request, for example when the client omits some properties from the request body that the server expects to receive.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6964",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6966": {
          "id": "S6966",
          "shortDescription": "Awaitable method should be used",
          "fullDescription": "In an async method, any blocking operations should be avoided.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6966",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}